<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <packaging>pom</packaging>
    <!--<modules>
        <module>hops-metadata-dal-impl-ndb</module>
        <module>hops-metadata-dal</module>
        <module>hadoop-common-project</module>
        <module>serverless-name-node</module>
        <module>hadoop-maven-plugins</module>
        <module>hadoop-hdfs-client</module>
        <module>serverless-name-node-base</module>
    </modules>-->

    <groupId>com.gmail.benrcarver.ServerlessNameNode</groupId>
    <artifactId>serverless-name-node-base</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <!-- Set the Release year during release -->
        <release-year>2019</release-year>

        <hadoop.version>3.2.0.0-SNAPSHOT</hadoop.version>

        <failIfNoTests>false</failIfNoTests>
        <maven.test.redirectTestOutputToFile>true</maven.test.redirectTestOutputToFile>
        <jetty.version>9.3.24.v20180605</jetty.version>
        <test.exclude>_</test.exclude>
        <test.exclude.pattern>_</test.exclude.pattern>

        <!-- number of threads/forks to use when running tests in parallel, see parallel-tests profile -->
        <testsThreadCount>4</testsThreadCount>

        <!-- These 2 versions are defined here because they are used -->
        <!-- JDIFF generation from embedded ant in the antrun plugin -->
        <jdiff.version>1.0.9</jdiff.version>
        <!-- Version number for xerces used by JDiff -->
        <xerces.jdiff.version>2.11.0</xerces.jdiff.version>

        <kafka.version>0.8.2.1</kafka.version>

        <hadoop.assemblies.version>3.2.0.0-SNAPSHOT</hadoop.assemblies.version>
        <commons-daemon.version>1.0.13</commons-daemon.version>

        <test.build.dir>${project.build.directory}/test-dir</test.build.dir>
        <test.build.data>${test.build.dir}</test.build.data>

        <!-- Used for building path to native library loaded by tests.  Projects -->
        <!-- at different nesting levels in the source tree may need to override. -->
        <hadoop.common.build.dir>${basedir}/../../hadoop-common-project/hadoop-common/target</hadoop.common.build.dir>
        <java.security.egd>file:///dev/urandom</java.security.egd>

        <!-- avro version -->
        <avro.version>1.7.7</avro.version>

        <!-- jersey version -->
        <jersey.version>1.19</jersey.version>

        <!-- jackson versions -->
        <jackson.version>1.9.13</jackson.version>
        <jackson2.version>2.10.1</jackson2.version>

        <!-- httpcomponents versions -->
        <httpclient.version>4.5.2</httpclient.version>
        <httpcore.version>4.4.4</httpcore.version>

        <!-- SLF4J version -->
        <slf4j.version>1.7.25</slf4j.version>

        <!-- com.google.re2j version -->
        <re2j.version>1.1</re2j.version>

        <!-- ProtocolBuffer version, used to verify the protoc version and -->
        <!-- define the protobuf JAR version                               -->
        <protobuf.version>2.5.0</protobuf.version>
        <!--suppress UnresolvedMavenProperty -->
        <protoc.path>${env.HADOOP_PROTOC_PATH}</protoc.path>

        <zookeeper.version>3.4.13</zookeeper.version>
        <curator.version>2.12.0</curator.version>
        <findbugs.version>3.0.0</findbugs.version>
        <spotbugs.version>3.1.0-RC1</spotbugs.version>
        <dnsjava.version>2.1.7</dnsjava.version>

        <guava.version>11.0.2</guava.version>
        <guice.version>4.0</guice.version>
        <joda-time.version>2.9.9</joda-time.version>

        <!-- Required for testing LDAP integration -->
        <apacheds.version>2.0.0-M21</apacheds.version>
        <ldap-api.version>1.0.0-M33</ldap-api.version>

        <!-- Apache Ratis version -->
        <ratis.version>0.3.0-eca3531-SNAPSHOT</ratis.version>
        <jcache.version>1.0-alpha-1</jcache.version>
        <ehcache.version>3.3.1</ehcache.version>
        <hikari.version>2.4.12</hikari.version>
        <mssql.version>6.2.1.jre7</mssql.version>
        <okhttp.version>2.7.5</okhttp.version>

        <!-- Maven protoc compiler -->
        <protobuf-maven-plugin.version>0.5.1</protobuf-maven-plugin.version>
        <protobuf-compile.version>3.5.0</protobuf-compile.version>
        <grpc.version>1.10.0</grpc.version>
        <os-maven-plugin.version>1.5.0.Final</os-maven-plugin.version>

        <!-- define the Java language version used by the compiler -->
        <javac.version>1.8</javac.version>

        <!-- The java version enforced by the maven enforcer -->
        <!-- more complex patterns can be used here, such as
           [${javac.version})
        for an open-ended enforcement
        -->
        <enforced.java.version>[${javac.version},)</enforced.java.version>
        <enforced.maven.version>[3.3.0,)</enforced.maven.version>

        <!-- Plugin versions and config -->
        <maven-surefire-plugin.argLine>-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError</maven-surefire-plugin.argLine>
        <maven-surefire-plugin.version>2.21.0</maven-surefire-plugin.version>
        <maven-surefire-report-plugin.version>${maven-surefire-plugin.version}</maven-surefire-report-plugin.version>
        <maven-failsafe-plugin.version>${maven-surefire-plugin.version}</maven-failsafe-plugin.version>

        <maven-clean-plugin.version>2.5</maven-clean-plugin.version>
        <maven-compiler-plugin.version>3.1</maven-compiler-plugin.version>
        <maven-install-plugin.version>2.5.1</maven-install-plugin.version>
        <maven-resources-plugin.version>2.6</maven-resources-plugin.version>
        <maven-shade-plugin.version>3.2.0</maven-shade-plugin.version>
        <maven-jar-plugin.version>2.5</maven-jar-plugin.version>
        <maven-war-plugin.version>3.1.0</maven-war-plugin.version>
        <maven-source-plugin.version>2.3</maven-source-plugin.version>
        <maven-pdf-plugin.version>1.2</maven-pdf-plugin.version>
        <maven-remote-resources-plugin.version>1.5</maven-remote-resources-plugin.version>
        <build-helper-maven-plugin.version>1.9</build-helper-maven-plugin.version>
        <exec-maven-plugin.version>1.3.1</exec-maven-plugin.version>
        <make-maven-plugin.version>1.0-beta-1</make-maven-plugin.version>
        <native-maven-plugin.version>1.0-alpha-8</native-maven-plugin.version>
        <surefire.fork.timeout>900</surefire.fork.timeout>
        <aws-java-sdk.version>1.11.375</aws-java-sdk.version>
        <hsqldb.version>2.3.4</hsqldb.version>
        <frontend-maven-plugin.version>1.5</frontend-maven-plugin.version>
        <!-- the version of Hadoop declared in the version resources; can be overridden
        so that Hadoop 3.x can declare itself a 2.x artifact. -->
        <!--suppress UnresolvedMavenProperty -->
        <declared.hadoop.version>${hadoop.version}</declared.hadoop.version>

        <swagger-annotations-version>1.5.4</swagger-annotations-version>
        <snakeyaml.version>1.16</snakeyaml.version>
        <hbase.one.version>1.2.6</hbase.one.version>
        <hbase.two.version>2.2.0</hbase.two.version>
    </properties>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${build-helper-maven-plugin.version}</version>
                </plugin>
                <!-- We include the configuration for license-maven-plugin to correct
                     maven-shade-plugin generated poms because it's always the same. We
                     can't simply configure the plugin because we must ensure execution
                     happens in the package phase after the shade plugin runs.
                  -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>1.10</version>
                    <configuration>
                        <canUpdateCopyright>false</canUpdateCopyright>
                        <roots><root>${project.basedir}</root></roots>
                    </configuration>
                    <executions>
                        <execution>
                            <id>update-pom-license</id>
                            <goals>
                                <goal>update-file-header</goal>
                            </goals>
                            <phase>package</phase>
                            <configuration>
                                <licenseName>apache_v2</licenseName>
                                <includes>
                                    <include>dependency-reduced-pom.xml</include>
                                </includes>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${maven-clean-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${javac.version}</source>
                        <target>${javac.version}</target>
                        <useIncrementalCompilation>false</useIncrementalCompilation>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>${maven-shade-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven-failsafe-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${maven-install-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${maven-javadoc-plugin.version}</version>
                    <configuration>
                        <additionalOptions>
                            <additionalOption>-Xmaxwarns 10000</additionalOption>
                        </additionalOptions>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${maven-war-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>findbugs-maven-plugin</artifactId>
                    <version>${findbugs.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>com.github.spotbugs</groupId>
                            <artifactId>spotbugs</artifactId>
                            <version>${spotbugs.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>native-maven-plugin</artifactId>
                    <version>${native-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>make-maven-plugin</artifactId>
                    <version>${make-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven-source-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.avro</groupId>
                    <artifactId>avro-maven-plugin</artifactId>
                    <version>${avro.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>${exec-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-pdf-plugin</artifactId>
                    <version>${maven-pdf-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>io.hops</groupId>
                    <artifactId>hadoop-maven-plugins</artifactId>
                    <version>${hadoop.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>${project.basedir}</directory>
                            <includes>
                                <include>dependency-reduced-pom.xml</include>
                            </includes>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-remote-resources-plugin</artifactId>
                <version>${maven-remote-resources-plugin.version}</version>
                <configuration>
                    <resourceBundles>
                        <resourceBundle>io.hops:hadoop-build-tools:${hadoop.version}</resourceBundle>
                    </resourceBundles>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>io.hops</groupId>
                        <artifactId>hadoop-build-tools</artifactId>
                        <version>${hadoop.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <goals>
                            <goal>process</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>animal-sniffer-maven-plugin</artifactId>
                <version>1.16</version>
                <executions>
                    <execution>
                        <id>signature-check</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <signature>
                        <groupId>org.codehaus.mojo.signature</groupId>
                        <artifactId>java18</artifactId>
                        <version>1.0</version>
                    </signature>
                    <ignores>
                        <ignore>sun.misc.*</ignore>
                        <ignore>sun.net.*</ignore>
                        <ignore>sun.nio.ch.*</ignore>
                        <ignore>com.sun.javadoc.*</ignore>
                        <ignore>com.sun.tools.*</ignore>
                        <ignore>java.lang.invoke.*</ignore>
                    </ignores>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>create-testdirs</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <mkdir dir="${test.build.dir}"/>
                                <mkdir dir="${test.build.data}"/>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <reuseForks>false</reuseForks>
                    <forkedProcessTimeoutInSeconds>${surefire.fork.timeout}</forkedProcessTimeoutInSeconds>
                    <argLine>${maven-surefire-plugin.argLine}</argLine>
                    <environmentVariables>
                        <HADOOP_COMMON_HOME>${hadoop.common.build.dir}</HADOOP_COMMON_HOME>
                        <!-- HADOOP_HOME required for tests on Windows to find winutils -->
                        <HADOOP_HOME>${hadoop.common.build.dir}</HADOOP_HOME>
                        <LD_LIBRARY_PATH>${env.LD_LIBRARY_PATH}:${project.build.directory}/native/target/usr/local/lib:${hadoop.common.build.dir}/native/target/usr/local/lib</LD_LIBRARY_PATH>
                        <DYLD_LIBRARY_PATH>${env.DYLD_LIBRARY_PATH}:${project.build.directory}/native/target/usr/local/lib:${hadoop.common.build.dir}/native/target/usr/local/lib</DYLD_LIBRARY_PATH>
                        <MALLOC_ARENA_MAX>4</MALLOC_ARENA_MAX>
                    </environmentVariables>
                    <trimStackTrace>false</trimStackTrace>
                    <systemPropertyVariables>

                        <hadoop.log.dir>${project.build.directory}/log</hadoop.log.dir>
                        <hadoop.tmp.dir>${project.build.directory}/tmp</hadoop.tmp.dir>

                        <!-- TODO: all references in testcases should be updated to this default -->
                        <test.build.dir>${test.build.dir}</test.build.dir>
                        <test.build.data>${test.build.data}</test.build.data>
                        <test.build.webapps>${test.build.webapps}</test.build.webapps>
                        <test.cache.data>${test.cache.data}</test.cache.data>
                        <test.build.classes>${project.build.directory}/test-classes</test.build.classes>

                        <java.net.preferIPv4Stack>true</java.net.preferIPv4Stack>
                        <java.security.krb5.conf>${project.build.directory}/test-classes/krb5.conf</java.security.krb5.conf>
                        <java.security.egd>${java.security.egd}</java.security.egd>
                        <require.test.libhadoop>${require.test.libhadoop}</require.test.libhadoop>
                    </systemPropertyVariables>
                    <includes>
                        <include>**/Test*.java</include>
                    </includes>
                    <excludes>
                        <exclude>**/${test.exclude}.java</exclude>
                        <exclude>${test.exclude.pattern}</exclude>
                        <exclude>**/Test*$*.java</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pdf-plugin</artifactId>
                <configuration>
                    <outputDirectory>${project.reporting.outputDirectory}</outputDirectory>
                    <includeReports>false</includeReports>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>depcheck</id>
                        <configuration>
                            <rules>
                                <DependencyConvergence>
                                    <uniqueVersions>true</uniqueVersions>
                                </DependencyConvergence>
                                <bannedDependencies>
                                    <excludes>
                                        <exclude>cglib:cglib:</exclude>
                                        <exclude>com.sun.jersey:*</exclude>
                                        <exclude>com.sun.jersey.contribs:*</exclude>
                                        <exclude>com.sun.jersey.jersey-test-framework:*</exclude>
                                        <exclude>com.google.inject:guice</exclude>
                                        <exclude>org.ow2.asm:asm</exclude>
                                    </excludes>
                                    <includes>
                                        <!-- for JDK 8 support -->
                                        <include>cglib:cglib:3.2.0</include>
                                        <include>com.google.inject:guice:4.0</include>
                                        <include>com.sun.jersey:jersey-core:1.19</include>
                                        <include>com.sun.jersey:jersey-servlet:1.19</include>
                                        <include>com.sun.jersey:jersey-json:1.19</include>
                                        <include>com.sun.jersey:jersey-server:1.19</include>
                                        <include>com.sun.jersey:jersey-client:1.19</include>
                                        <include>com.sun.jersey:jersey-grizzly2:1.19</include>
                                        <include>com.sun.jersey:jersey-grizzly2-servlet:1.19</include>
                                        <include>com.sun.jersey.jersey-test-framework:jersey-test-framework-core:1.19</include>
                                        <include>com.sun.jersey.jersey-test-framework:jersey-test-framework-grizzly2:1.19</include>
                                        <include>com.sun.jersey.contribs:jersey-guice:1.19</include>
                                        <include>org.ow2.asm:asm:5.0.0</include>
                                    </includes>
                                </bannedDependencies>
                            </rules>
                        </configuration>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <phase>verify</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>os.linux</id>
            <activation>
                <os>
                    <family>!Mac</family>
                </os>
            </activation>
            <properties>
                <build.platform>${os.name}-${os.arch}-${sun.arch.data.model}</build.platform>
            </properties>
        </profile>
        <profile>
            <id>os.mac</id>
            <activation>
                <os>
                    <family>Mac</family>
                </os>
            </activation>
            <properties>
                <build.platform>Mac_OS_X-${sun.arch.data.model}</build.platform>
            </properties>
        </profile>
        <profile>
            <id>native-win</id>
            <activation>
                <os>
                    <family>Windows</family>
                </os>
            </activation>
            <properties>
                <!-- We must use this exact string for egd on Windows, because the -->
                <!-- JVM will check for an exact string match on this.  If found, it -->
                <!-- will use a native entropy provider.  This will not really -->
                <!-- attempt to open a file at this path. -->
                <java.security.egd>file:/dev/urandom</java.security.egd>
                <bundle.snappy.in.bin>true</bundle.snappy.in.bin>
                <bundle.zstd.in.bin>true</bundle.zstd.in.bin>
                <bundle.openssl.in.bin>true</bundle.openssl.in.bin>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <environmentVariables>
                                <!-- Specify where to look for the native DLL on Windows -->
                                <PATH>${env.PATH};${hadoop.common.build.dir}/bin;${snappy.lib}</PATH>
                                <PATH>${env.PATH};${hadoop.common.build.dir}/bin;${zstd.lib}</PATH>
                                <PATH>${env.PATH};${hadoop.common.build.dir}/bin;${openssl.lib}</PATH>
                                <PATH>${env.PATH};${hadoop.common.build.dir}/bin;${isal.lib}</PATH>
                            </environmentVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>test-patch</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <fork>true</fork>
                            <source>${javac.version}</source>
                            <target>${javac.version}</target>
                            <compilerArguments>
                                <Xlint/>
                                <Xlint:-unchecked/>
                                <Xmaxwarns>9999</Xmaxwarns>
                            </compilerArguments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>dist</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <executions>
                            <execution>
                                <!-- build javadoc jars per jar for publishing to maven -->
                                <id>module-javadocs</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <executions>
                            <execution>
                                <!-- builds source jars and attaches them to the project for publishing -->
                                <id>hadoop-java-sources</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                    <goal>test-jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>dist-enforce</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- The profile for building against HBase 1.2.x
         This is the default.
         -->
        <profile>
            <id>hbase1</id>
            <activation>
                <property>
                    <name>!hbase.profile</name>
                </property>
            </activation>
            <properties>
                <hbase.version>${hbase.one.version}</hbase.version>
                <hbase-compatible-hadoop.version>${hadoop.version}</hbase-compatible-hadoop.version>
                <hbase-compatible-guava.version>12.0.1</hbase-compatible-guava.version>
                <hbase-server-artifactid>hadoop-yarn-server-timelineservice-hbase-server-1</hbase-server-artifactid>
            </properties>
            <dependencyManagement>
                <dependencies>
                    <dependency>
                        <groupId>io.hops</groupId>
                        <artifactId>${hbase-server-artifactid}</artifactId>
                        <version>${hadoop.version}</version>
                    </dependency>
                </dependencies>
            </dependencyManagement>
        </profile>
        <!-- The profile for building against HBase 2.0.0.
         Activate using: mvn -Dhbase.profile=2.0
        -->
        <profile>
            <id>hbase2</id>
            <activation>
                <property>
                    <name>hbase.profile</name>
                    <value>2.0</value>
                </property>
            </activation>
            <properties>
                <hbase.version>${hbase.two.version}</hbase.version>
                <hbase-compatible-hadoop.version>${hadoop.version}</hbase-compatible-hadoop.version>
                <hbase-compatible-guava.version>11.0.2</hbase-compatible-guava.version>
                <hbase-server-artifactid>hadoop-yarn-server-timelineservice-hbase-server-2</hbase-server-artifactid>
            </properties>
            <dependencyManagement>
                <dependencies>
                    <dependency>
                        <groupId>io.hops</groupId>
                        <artifactId>${hbase-server-artifactid}</artifactId>
                        <version>${hadoop.version}</version>
                    </dependency>
                </dependencies>
            </dependencyManagement>
        </profile>
    </profiles>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>bom</artifactId>
                <version>2.13.54</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-lambda-java-core</artifactId>
            <version>1.2.0</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.8.6</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
            <version>3.0.2</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.5</version>
        </dependency>
        <dependency>
            <groupId>org.apache.curator</groupId>
            <artifactId>curator-test</artifactId>
            <version>4.2.0</version>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>29.0-jre</version>
        </dependency>
    </dependencies>

</project>